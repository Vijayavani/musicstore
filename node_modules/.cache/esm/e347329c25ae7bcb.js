let express,cors,bodyParser,dotenv,mongoose,morgan,readdirSync;_25a‍.w("express",[["default",["express"],function(v){express=v}]]);_25a‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_25a‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_25a‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_25a‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_25a‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_25a‍.w("fs",[["readdirSync",["readdirSync"],function(v){readdirSync=v}]]);





//import albumRouter from './routes/albumRouter';


dotenv.config();

const app = express();

app.use(cors());
app.use(morgan("dev"));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended : false}));

readdirSync('./routes').map((r)=> app.use('/api',require(`./routes/${r}`)));

mongoose.connect(process.env.DATABASE)
.then(console.log('Database is connected'))
.catch((err)=>_25a‍.g.console.error('Database connection failed',err))

//routes
app.use("/api",albumRouter)
const port = process.env.PORT || 8000;
app.listen(port ,() => console.log(`Server is running on ${port}`))

